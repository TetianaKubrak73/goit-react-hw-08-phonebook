{"version":3,"file":"static/js/51.4a75b6bc.chunk.js","mappings":"yPACA,GAAiB,E,SCsBXA,EAAgB,CACpBC,KAAM,GACNC,MAAO,GACPC,SAAU,IAgFZ,EA7EqB,WACnB,IAAAC,GAA0BC,EAAAA,EAAAA,WAAQC,EAAAA,EAAAA,GAAC,CAAC,EAAIN,IAAgBO,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAAjDK,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAChBI,GAAWC,EAAAA,EAAAA,MACXC,EAAe,SAAHC,GAAoB,IAAdC,EAAMD,EAANC,OACdd,EAA+Bc,EAA/Bd,KAAMe,EAAyBD,EAAzBC,MAAOC,EAAkBF,EAAlBE,KAAMC,EAAYH,EAAZG,QACrBC,EAAoB,aAATF,EAAsBC,EAAUF,EAEjDN,GAAQJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACLG,GAAK,IAAAW,EAAAA,EAAAA,GAAA,GACPnB,EAAOkB,IAEZ,EAQME,EAAQ,WACZX,GAAQJ,EAAAA,EAAAA,GAAC,CAAC,EAAIN,GAChB,EAEMsB,GAASC,EAAAA,EAAAA,SACTC,GAAUD,EAAAA,EAAAA,SACVE,GAAaF,EAAAA,EAAAA,SAEXtB,EAA0BQ,EAA1BR,KAAMC,EAAoBO,EAApBP,MAAOC,EAAaM,EAAbN,SAErB,OACEuB,EAAAA,EAAAA,MAAA,QAAMC,UAAWC,EAAAA,KAAaC,SAjBX,SAAAC,GACnBA,EAAEC,iBACFpB,GAASqB,EAAAA,EAAAA,IAAOvB,IAChBY,GACF,EAawDY,aAAa,MAAKC,SAAA,EACtER,EAAAA,EAAAA,MAAA,SAAOS,QAASb,EAAOY,SAAA,CAAC,SAEtBE,EAAAA,EAAAA,KAAA,SACEpB,MAAOf,EACPoC,SAAUxB,EACVyB,GAAIhB,EACJL,KAAK,OACLhB,KAAK,OACLsC,YAAY,iEACZC,QAAQ,YACRC,MAAM,8SACNC,UAAQ,QAGZhB,EAAAA,EAAAA,MAAA,SAAOS,QAASX,EAAQU,SAAA,CAAC,UAEvBE,EAAAA,EAAAA,KAAA,SACEpB,MAAOd,EACPmC,SAAUxB,EACVyB,GAAId,EACJP,KAAK,QACLhB,KAAK,QACLsC,YAAY,oLACZC,QAAQ,oDACRC,MAAM,kRACNC,UAAQ,QAGZhB,EAAAA,EAAAA,MAAA,SAAOS,QAASV,EAAWS,SAAA,CAAC,aAE1BE,EAAAA,EAAAA,KAAA,SACEpB,MAAOb,EACPkC,SAAUxB,EACVyB,GAAIb,EACJR,KAAK,WACLhB,KAAK,WACLsC,YAAY,kFACZC,QAAQ,6CACRC,MAAM,udACNC,UAAQ,QAGZN,EAAAA,EAAAA,KAAA,UAAQnB,KAAK,SAAQiB,SAAC,eAG5B,ECtGe,SAASS,IACtB,OACEjB,EAAAA,EAAAA,MAAAkB,EAAAA,SAAA,CAAAV,SAAA,EACEE,EAAAA,EAAAA,KAAA,SAAAF,SAAO,kBACPE,EAAAA,EAAAA,KAACS,EAAY,IAAG,MAGtB,C","sources":["components/RegisterForm/RegisterForm.module.css","components/RegisterForm/RegisterForm.jsx","Pages/Register.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import { useDispatch } from 'react-redux';\nimport { signup } from '../../redux/auth/auth-operations';\nimport { useState, useId } from 'react';\nimport styles from './RegisterForm.module.css';\n\n// Компонент RegisterForm відповідає за форму реєстрації нового користувача\n// export const RegisterForm = () => {\n//   const dispatch = useDispatch();\n\n//   const handleSubmit = event => {\n//     event.preventDefault();\n//     const form = event.currentTarget;\n\n//     // Викликаємо дію signup з параметрами name, email та password, які отримуємо зі значень полів форми\n//     dispatch(\n//       signup({\n//         name: form.elements.name.value,\n//         email: form.elements.email.value,\n//         password: form.elements.password.value,\n//       })\n//     );\n//     form.reset(); // Очищуємо значення полів форми після відправки\n//   };\nconst INITIAL_STATE = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nconst RegisterForm = () => {\n  const [state, setState] = useState({ ...INITIAL_STATE });\n  const dispatch = useDispatch();\n  const handleChange = ({ target }) => {\n    const { name, value, type, checked } = target;\n    const newValue = type === 'checkbox' ? checked : value;\n\n    setState({\n      ...state,\n      [name]: newValue,\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(signup(state));\n    reset();\n  };\n\n  const reset = () => {\n    setState({ ...INITIAL_STATE });\n  };\n\n  const nameId = useId();\n  const emailId = useId();\n  const passwordId = useId();\n\n  const { name, email, password } = state;\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit} autoComplete=\"off\">\n      <label htmlFor={nameId}>\n        Name:\n        <input\n          value={name}\n          onChange={handleChange}\n          id={nameId}\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Введіть ім'я\"\n          pattern=\"^[^\\d]+$\"\n          title=\"Ім'я має містити лише літери, апострофи, дефіси та відступи\"\n          required\n        />\n      </label>\n      <label htmlFor={emailId}>\n        Email:\n        <input\n          value={email}\n          onChange={handleChange}\n          id={emailId}\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Введіть адресу електронної пошти\"\n          pattern=\"^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$\"\n          title=\"Будь ласка, введіть дійсну адресу електронної пошти\"\n          required\n        />\n      </label>\n      <label htmlFor={passwordId}>\n        Password:\n        <input\n          value={password}\n          onChange={handleChange}\n          id={passwordId}\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Введіть пароль\"\n          pattern=\"^[a-zA-Z0-9!@#$%^&*()-_=+`~[\\]{}|:<>/?]+$\"\n          title=\"Пароль повинен містити тільки латинські літери (як великі, так і малі), цифри та інші символи\"\n          required\n        />\n      </label>\n      <button type=\"submit\">Register</button>\n    </form>\n  );\n};\nexport default RegisterForm;\n","import RegisterForm from 'components/RegisterForm/RegisterForm';\n\n// Компонент Register відповідає за відображення сторінки реєстрації\nexport default function Register() {\n  return (\n    <>\n      <title>Registration</title>\n      <RegisterForm /> {/* Відображення форми для реєстрації */}\n    </>\n  );\n}\n"],"names":["INITIAL_STATE","name","email","password","_useState","useState","_objectSpread","_useState2","_slicedToArray","state","setState","dispatch","useDispatch","handleChange","_ref","target","value","type","checked","newValue","_defineProperty","reset","nameId","useId","emailId","passwordId","_jsxs","className","styles","onSubmit","e","preventDefault","signup","autoComplete","children","htmlFor","_jsx","onChange","id","placeholder","pattern","title","required","Register","_Fragment","RegisterForm"],"sourceRoot":""}
{"version":3,"file":"static/js/422.04ad0b42.chunk.js","mappings":"sOACA,EAAuB,wBAAvB,EAAuD,yB,SCmBjDA,EAAgB,CACpBC,MAAO,GACPC,SAAU,IA0DZ,EAxDkB,SAAHC,GAAsB,IAAhBC,EAAQD,EAARC,SACnBC,GAA0BC,EAAAA,EAAAA,WAAQC,EAAAA,EAAAA,GAAC,CAAC,EAAIP,IAAgBQ,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAAjDK,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAEhBI,EAAe,SAAHC,GAAoB,IAAdC,EAAMD,EAANC,OACdC,EAA+BD,EAA/BC,KAAMC,EAAyBF,EAAzBE,MAAOC,EAAkBH,EAAlBG,KAAMC,EAAYJ,EAAZI,QACrBC,EAAoB,aAATF,EAAsBC,EAAUF,EAEjDL,GAAQJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACLG,GAAK,IAAAU,EAAAA,EAAAA,GAAA,GACPL,EAAOI,IAEZ,EAQME,EAAQ,WACZV,GAAQJ,EAAAA,EAAAA,GAAC,CAAC,EAAIP,GAChB,EAEMsB,GAAUC,EAAAA,EAAAA,SACVC,GAAaD,EAAAA,EAAAA,SAEXtB,EAAoBS,EAApBT,MAAOC,EAAaQ,EAAbR,SAEf,OACEuB,EAAAA,EAAAA,MAAA,QAAMC,UAAWC,EAAavB,SAhBX,SAAAwB,GACnBA,EAAEC,iBACFzB,GAAQG,EAAAA,EAAAA,GAAC,CAAC,EAAIG,IACdW,GACF,EAYwDS,aAAa,MAAKC,SAAA,EACtEN,EAAAA,EAAAA,MAAA,SAAOO,QAASV,EAASI,UAAWC,EAAaI,SAAA,CAAC,SAEhDE,EAAAA,EAAAA,KAAA,SACEjB,MAAOf,EACPiC,SAAUtB,EACVK,KAAK,QACLF,KAAK,QACLoB,GAAIb,EACJc,UAAQ,QAGZX,EAAAA,EAAAA,MAAA,SAAOO,QAASR,EAAYE,UAAWC,EAAaI,SAAA,CAAC,YAEnDE,EAAAA,EAAAA,KAAA,SACEjB,MAAOd,EACPgC,SAAUtB,EACVK,KAAK,WACLF,KAAK,WACLoB,GAAIX,EACJY,UAAQ,QAGZH,EAAAA,EAAAA,KAAA,UAAQhB,KAAK,SAAQc,SAAC,YAG5B,EC5Ee,SAASM,IACtB,OACEZ,EAAAA,EAAAA,MAAAa,EAAAA,SAAA,CAAAP,SAAA,EACEE,EAAAA,EAAAA,KAAA,SAAAF,SAAO,WACPE,EAAAA,EAAAA,KAACM,EAAS,IAAG,MAGnB,C","sources":["webpack://goit-react-hw-08-phonebook/./src/components/LoginForm/LoginForm.module.css?4ac5","components/LoginForm/LoginForm.jsx","Pages/Login.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"LoginForm_form__gPEx5\",\"label\":\"LoginForm_label__F7sLE\"};","// import { useDispatch } from 'react-redux';\nimport { useState, useId } from 'react';\n// import { login } from '../../redux/auth/auth-operations';\nimport styles from './LoginForm.module.css';\n\n// export const LoginForm = () => {\n//   const dispatch = useDispatch();\n\n//   const handleSubmit = e => {\n//     e.preventDefault();\n//     const form = e.currentTarget;\n//     dispatch(\n//       login({\n//         email: form.elements.email.value,\n//         password: form.elements.password.value,\n//       })\n//     );\n//     form.reset();\n//   };\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n};\nconst LoginForm = ({ onSubmit }) => {\n  const [state, setState] = useState({ ...INITIAL_STATE });\n\n  const handleChange = ({ target }) => {\n    const { name, value, type, checked } = target;\n    const newValue = type === 'checkbox' ? checked : value;\n\n    setState({\n      ...state,\n      [name]: newValue,\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    reset();\n  };\n\n  const reset = () => {\n    setState({ ...INITIAL_STATE });\n  };\n\n  const emailId = useId();\n  const passwordId = useId();\n\n  const { email, password } = state;\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit} autoComplete=\"off\">\n      <label htmlFor={emailId} className={styles.label}>\n        Email\n        <input\n          value={email}\n          onChange={handleChange}\n          type=\"email\"\n          name=\"email\"\n          id={emailId}\n          required\n        />\n      </label>\n      <label htmlFor={passwordId} className={styles.label}>\n        Password\n        <input\n          value={password}\n          onChange={handleChange}\n          type=\"password\"\n          name=\"password\"\n          id={passwordId}\n          required\n        />\n      </label>\n      <button type=\"submit\">LogIn</button>\n    </form>\n  );\n};\nexport default LoginForm;\n","import LoginForm from '../components/LoginForm/LoginForm';\n\n// Компонент Login відповідає за відображення сторінки входу в систему\nexport default function Login() {\n  return (\n    <>\n      <title>Login</title>\n      <LoginForm /> {/* Відображення форми для входу в систему */}\n    </>\n  );\n}\n"],"names":["INITIAL_STATE","email","password","_ref","onSubmit","_useState","useState","_objectSpread","_useState2","_slicedToArray","state","setState","handleChange","_ref2","target","name","value","type","checked","newValue","_defineProperty","reset","emailId","useId","passwordId","_jsxs","className","styles","e","preventDefault","autoComplete","children","htmlFor","_jsx","onChange","id","required","Login","_Fragment","LoginForm"],"sourceRoot":""}